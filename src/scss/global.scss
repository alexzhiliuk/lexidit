/* -------- GLOBAL -------- */

:root {
    --gradient1: linear-gradient(72.48deg, rgba(58, 142, 237, 0.15) 0%, rgba(255, 56, 122, 0.15) 100%);
    --gradient2: linear-gradient(0deg, rgba(35, 35, 35, 0.9), rgba(35, 35, 35, 0.9));
}

* {
    padding: 0;
    margin: 0;
    box-sizing: border-box;
}

*,
*::after,
*::before {
    transition: $quickTransition;
}

.container {
    max-width: calc($conteinerWidth + 2 * $containerPadding);
    width: 100%;
    margin: 0 auto;
    padding: 0 $containerPadding;

}


html,
body {
    max-width: 100vw;
    min-height: 100vh;
    overflow-x: clip;
    scroll-behavior: smooth;
    font-family: $fontPrimary;
}

body {
    display: flex;
    flex-direction: column;
    justify-content: space-between;

}

main {
    
}

ul, ol {
    list-style-type: none;
}

a {
    text-decoration: none;
    color: inherit;
}

button {
    cursor: pointer;
    background: none;
}

.lock {
    overflow-y: clip;
    overflow-x: clip;
}

$radius: clamp(20px, 4vw, 40px);
$sectionPadding: clamp(52px, 9vw, 90px);

.bottom-radius {
    border-radius: 0 0 $radius $radius;
}

.overlap {
    position: relative;
    margin-top: calc(-1 * $radius);
}

// Margin
.mt-12 {
    margin-top: clamp(8px, 1vw, 12px);
}

.mt-40 {
    margin-top: clamp(24px, 4vw, 40px);
}

.flex-center {
    display: flex;
    justify-content: center;
}


// Section
.section {
    padding-top: calc($sectionPadding + $radius);
    background: $colorWhite;

    &.bottom-radius {
        padding-bottom: $sectionPadding;
    }

    &_bg {
        &_secondary {
            background-color: $colorBgBlue;
        }
        &_secondary2 {
            background-color: $colorBgBlue2;
        }
        &_pattern {
            
            background-image: url(../img/sections/pattern.png);
            background-position: center center;
            background-size: 2500px auto;
            background-repeat: no-repeat;

            @media screen and (max-width: $breakpoint576) {
                background-position: 27% center;
            }        
        }
        &_primary {
            background-color: $colorPrimary;
        }
        &_gradient {
            background: $gradientBg1, $gradientBg2, #232323;
            color: $colorWhite;
        }
    }

    &__header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        gap: 12px;
        margin-bottom: clamp(24px, 4vw, 40px);

        @media screen and (max-width: $breakpoint576) {
            .slider-navigation {
                display: none;
            }
        }
    }

    &-title {
        @include h2;
    }

    &-subtitle {
        color: $colorText;
        line-height: 1.3;
        font-size: clamp(14px, 2vw, 18px);
        margin-top: clamp(8px, 2vw, 16px);
    }

    // &__items {
    //     display: flex;
    //     flex-direction: column;
    //     gap: $sectionPadding;
    // }
}

.company-name {

    position: absolute;
    right: 0;
    bottom: 0;
    translate: 0 40%;
    width: clamp(150px, 25vw, 237px);
    height: auto;
    display: block;
    opacity: .5;

    &_top {
        bottom: unset;
        top: 0;
        translate: 0 -5%;
        opacity: 1;
    }
    

}


// Grids
.one-column-grid {
    display: grid;
    grid-template-columns: 1fr;
    grid-auto-rows: 1fr;
    gap: 24px;

    @media screen and (max-width: $breakpoint992) {
        gap: 16px;
    }
}


.two-columns-grid {
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-auto-rows: 1fr;
    gap: 24px;

    @media screen and (max-width: $breakpoint992) {
        gap: 16px;
    }

    @media screen and (max-width: $breakpoint576) {
        grid-template-columns: 1fr;
    }
}


.three-columns-grid {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    grid-auto-rows: 1fr;
    gap: 24px;

    @media screen and (max-width: $breakpoint992) {
        grid-template-columns: 1fr 1fr;
        gap: 16px;
    }

    @media screen and (max-width: $breakpoint576) {
        grid-template-columns: 1fr;
    }
}

.four-columns-grid {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
    grid-auto-rows: 1fr;
    gap: 24px;

    @media screen and (max-width: $breakpoint992) {
        grid-template-columns: 1fr 1fr;
        gap: 16px;
    }

    @media screen and (max-width: $breakpoint576) {
        grid-template-columns: 1fr;
    }
}

@mixin freeGridCells {
    @media screen and (min-width: $gridTabletBreakpoint) {
        &.cell-2-2 {
            grid-row: span 2;
            grid-column: span 2;
        }
    
        // 1 строка, 2 колонки
        &.cell-1-2 {
            grid-column: span 2;
        }
    
        // 2 строки, 1 колонка
        &.cell-2-1 {
            grid-row: span 2;
        }
    }
}

.free-one-column-grid {
    display: grid;
    grid-template-columns: 1fr;
    grid-auto-rows: 1fr;
    gap: 24px;
    grid-auto-flow: dense;

    & > * {
        @include freeGridCells;
    }

    @media screen and (max-width: $breakpoint992) {
        gap: 16px;
    }

    @media screen and (max-width: $gridMobileBreakpoint) {
        grid-template-columns: 1fr;
        grid-auto-rows: unset;;
    }
}

.free-two-columns-grid {
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-auto-rows: 1fr;
    gap: 24px;
    grid-auto-flow: dense;

    & > * {
        @include freeGridCells;
    }

    @media screen and (max-width: $gridTabletBreakpoint) {
        gap: 16px;
    }

    @media screen and (max-width: $gridMobileBreakpoint) {
        grid-template-columns: 1fr;
        grid-auto-rows: unset;;
    }
}

.free-three-columns-grid {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    grid-auto-rows: 1fr;
    gap: 24px;
    grid-auto-flow: dense;

    & > * {
        @include freeGridCells;
    }

    @media screen and (max-width: $gridTabletBreakpoint) {
        grid-template-columns: 1fr 1fr;
        gap: 16px;
    }

    @media screen and (max-width: $gridMobileBreakpoint) {
        grid-template-columns: 1fr;
        grid-auto-rows: unset;;
    }
}


.free-four-columns-grid {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
    grid-auto-rows: 1fr;
    gap: 24px;
    grid-auto-flow: dense;

    & > * {
        @include freeGridCells;
    }

    @media screen and (max-width: $gridTabletBreakpoint) {
        grid-template-columns: 1fr 1fr;
        gap: 16px;
    }

    @media screen and (max-width: $gridMobileBreakpoint) {
        grid-template-columns: 1fr;
        grid-auto-rows: unset;;
    }
}


// Slider
.js-mobile-slider {
    @media screen and (max-width: $gridMobileBreakpoint) {
        display: none;
    }
}


.mobile-slider {
    width: 100vw;
    margin-left: calc(-1 * (100vw - 100%) / 2) !important;
    margin-right: calc(-1 * (100vw - 100%) / 2) !important;
    padding: 0 $containerPadding !important;

    @media screen and (min-width: $gridMobileBreakpoint) {
        display: none !important;
    }

    .swiper-slide {
        height: auto;

        & > * {
            height: 100%;
        }
    }
}

.slider-with-side-blur {
    $sideWidth: 105px;

    position: relative;
    margin: -10px calc(-1 * $sideWidth) !important;
    padding: 10px $sideWidth !important;

    &::before,
    &::after {
        content: '';
        position: absolute;
        top: 0;
        bottom: 0;
        width: $sideWidth;

        backdrop-filter: blur(2.5px);
        -webkit-backdrop-filter: blur(2.5px);

        z-index: 1;
    }

    &::before {
        left: 0;
        background: linear-gradient(90deg, #FFFFFF 0%, rgba(255, 255, 255, 0) 100%);
        z-index: 2;
    }

    &::after {
        right: 0;
        background: linear-gradient(270deg, #FFFFFF 0%, rgba(255, 255, 255, 0) 100%);
    }

    @media screen and (max-width: $breakpoint576) {
        &::before,
        &::after {
            display: none;
        }
    }
}

.slider-with-same-height {
    .swiper-slide {
        height: auto;
    }
}

.slider-navigation {
    display: flex;
    gap: 8px;

    &__btn {
        width: 40px;
        aspect-ratio: 1;
        flex-shrink: 0;
        border-radius: 8px;
        background: $colorBlack;

        display: flex;
        align-items: center;
        justify-content: center;

        svg {
            width: 24px;
            height: auto;
        }

        &.swiper-button-disabled {
            opacity: .2;
        }
    }
}

.slider-pagination {
    @media screen and (min-width: $breakpoint576) {
        display: none;
    }

    display: flex;
    justify-content: center;
    gap: 4px;
    margin-top: 12px;
    padding: 8px 0;

    .swiper-pagination-bullet {
        padding: 0 !important;
        margin: 0 !important;

        &-active {
            background: $colorPrimary;
        }
    }

}

// Counter
.counter {
    counter-reset: counter-list;
}


// Other
.all-items-link {
    display: flex;
    align-items: center;
    gap: 10px;

    font-size: clamp(16px, 2vw, 20px);
    font-weight: 500;

    &:hover {
        .all-items-link__icon {
            background: $colorPrimary;
        }
    }

    &__icon {
        width: clamp(24px, 3vw, 28px);
        aspect-ratio: 1;
        flex-shrink: 0;
        border-radius: clamp(4px, 1vw, 8px);

        display: flex;
        align-items: center;
        justify-content: center;
        background: $colorBlack;

        svg {
            width: 16px;
            height: auto;
            display: block;
            color: $colorWhite;
        }

    }
}

.ps {
    @include text;
    color: rgba($color: $colorBlack, $alpha: .7);

    margin-top: clamp(24px, 4vw, 40px);
    padding-top: clamp(12px, 2vw, 16px);
    border-top: $inputBorder;
}

.more-btn {
    margin-top: clamp(24px, 4vw, 40px);
    display: flex;
    justify-content: center;

    @media screen and (max-width: $breakpoint576) {
        .btn {
            width: 100%;
        }
    }
}

// Animations
@keyframes slideIn {
    to {
      transform: translateX(0);
      opacity: 1;
      animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1.275);
    }
}
@keyframes slideOut {
    to {
      transform: translateX(100%);
      opacity: 0;
      animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1.275);
    }
}
